{"version":3,"file":"static/js/654.d06d247f.chunk.js","mappings":"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","sources":["shared/hooks/useForm.js","modules/RegisterForm/initialState.js","modules/RegisterForm/fields.js","webpack://react-homework-template/./src/modules/RegisterForm/RegisterForm.module.css?281d","modules/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx","shared/components/Button/Buttons.jsx","webpack://react-homework-template/./src/shared/components/TextField/TextField.module.css?2d5d","shared/components/TextField/TextField.jsx","../node_modules/nanoid/index.browser.js","../node_modules/@mui/icons-material/HowToReg.js"],"sourcesContent":["import { useState, useCallback } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n    const [state, setState] = useState({ ...initialState });\n\n    const handleChange = useCallback(\n        ({ target }) => {\n        const { name, value } = target;\n        setState(prevState => {\n            return { ...prevState, [name]: value };\n        });\n        },\n        [setState]\n    );\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        onSubmit({ ...state });\n        setState({ ...initialState });\n    };\n\n    return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n","const initialState = {\n    name: '',\n    email: '',\n    password: '',\n};\n\nexport default initialState;\n","const fields = {\n    name: {\n        type: 'text',\n        name: 'name',\n        required: true,\n        label: 'Name:',\n        placeholder: 'User name',\n        pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    },\n    email: {\n        type: 'email',\n        name: 'email',\n        required: true,\n        label: 'Email:',\n        placeholder: 'User email',\n    },\n    password: {\n        type: 'password',\n        name: 'password',\n        required: true,\n        label: 'Password:',\n        placeholder: 'User password',\n    },\n};\n\nexport default fields;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"RegisterForm_title__XvlH+\",\"form\":\"RegisterForm_form__Rm9pY\"};","import * as React from 'react';\nimport HowToRegIcon from '@mui/icons-material/HowToReg';\nimport useForm from 'shared/hooks/useForm';\nimport { Btn } from 'shared/components/Button/Buttons';\nimport TextField from 'shared/components/TextField/TextField';\nimport initialState from './initialState';\nimport fields from './fields';\nimport css from './RegisterForm.module.css';\n\nconst RegisterForm = ({ onSubmit }) => {\n    const { state, handleChange, handleSubmit } = useForm({\n        initialState,\n        onSubmit,\n    });\n\n    const { name, email, password } = state;\n\n    return (\n        <>\n        <h2 className={css.title}>New user registration</h2>\n\n        <form onSubmit={handleSubmit} className={css.form}>\n            <TextField value={name} handleChange={handleChange} {...fields.name} />\n            <TextField\n                value={email}\n                handleChange={handleChange}\n                {...fields.email}\n            />\n            <TextField\n                value={password}\n                handleChange={handleChange}\n                {...fields.password}\n            />\n\n            <Btn endIcon={<HowToRegIcon />}>Register</Btn>\n        </form>\n        </>\n    );\n};\n\nexport default RegisterForm;\n","import { useDispatch } from 'react-redux';\nimport { signup } from 'redux/auth/auth-operations';\nimport RegisterForm from 'modules/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n    const dispatch = useDispatch();\n\n    const handleSignup = data => {\n        dispatch(signup(data));\n    };\n\n    return (\n        <>\n        <RegisterForm onSubmit={handleSignup} />\n        </>\n    );\n};\n\nexport default RegisterPage;\n","import { Button } from '@mui/material';\nimport { blue } from '@mui/material/colors';\nimport { styled } from '@mui/material/styles';\n\nconst ColorButton = styled(Button)(({ theme }) => ({\n    color: theme.palette.getContrastText(blue[200]),\n    backgroundColor: blue[200],\n\n    '&:hover': {\n        backgroundColor: blue[300],\n    },\n}));\n\nexport const Btn = ({ children, type = 'submit', endIcon }) => {\n    return (\n        <ColorButton variant=\"contained\" type={type} endIcon={endIcon}>\n        {children}\n        </ColorButton>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"TextField_wrapper__OQN5w\",\"label\":\"TextField_label__PQj1k\",\"input\":\"TextField_input__Oi20a\"};","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\nimport css from './TextField.module.css';\n\nconst TextField = ({ label, handleChange, ...props }) => {\n    const id = useMemo(() => nanoid(), []);\n\n    return (\n        <div className={css.wrapper}>\n        <label htmlFor={id} className={css.label}>\n            {label}\n        </label>\n        <input id={id} onChange={handleChange} {...props} className={css.input} />\n        </div>\n    );\n};\n\nexport default TextField;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"m9 17 3-2.94c-.39-.04-.68-.06-1-.06-2.67 0-8 1.34-8 4v2h9l-3-3zm2-5c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m4.47 8.5L12 17l1.4-1.41 2.07 2.08 5.13-5.17 1.4 1.41z\"\n}), 'HowToReg');\nexports.default = _default;"],"names":["initialState","onSubmit","useState","state","setState","handleChange","useCallback","target","name","value","prevState","handleSubmit","e","preventDefault","email","password","type","required","label","placeholder","pattern","useForm","className","css","TextField","fields","endIcon","HowToReg","dispatch","useDispatch","data","signup","ColorButton","styled","Button","color","theme","palette","getContrastText","blue","backgroundColor","Btn","children","variant","props","id","useMemo","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","htmlFor","onChange","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","fillRule","d"],"sourceRoot":""}